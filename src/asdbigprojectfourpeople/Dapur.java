/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package asdbigprojectfourpeople;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author julio
 */
public class Dapur extends javax.swing.JFrame {

    protected static Dapur dapur;
    protected JTable dapurTabel;

    /**
     * Creates new form Dapur
     */
    public Dapur() {
        initComponents();
        dapur = this;
        dapurTabel = jTable1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonPopDapur = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Dapur");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusable(false);
        setFocusableWindowState(false);
        setLocation(new java.awt.Point(0, 390));
        setPreferredSize(new java.awt.Dimension(700, 364));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Nama Pesanan", "Metode Bayar", "Makan di", "Banyak", "Catatan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        buttonPopDapur.setText("Done");
        buttonPopDapur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPopDapurActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(buttonPopDapur)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(buttonPopDapur)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // DATA YANG AKAN DIAKSES DAN DIMODIF DI DB
    public static MyDataDatabase dataInDatabase = new MyDataDatabase(99,8);
    
    private void buttonPopDapurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPopDapurActionPerformed
        //String[] topPesanan = {model.getValueAt(0,0).toString(), model.getValueAt(0,1).toString()};

        // masukin temp data pesanan yang duluan masuk
        String[] temp = Kasir.pesanan.dequeque();
        
        // push ke database tapi bentukny ms agar mudah sorting
        dataInDatabase.push(new String[]{temp[0],temp[1], temp[2],temp[3], Util.hargaModalDariNamaPesanan(temp[1]),Util.hargaDariNamaPesanan(temp[1]),temp[4], temp[5], temp[6]});
        
        // convert ms to date
        long ms = Long.valueOf(temp[6]);
        Date date = new Date(ms);
        String waktu = ""+date;
        
        // ambil tabel dari db lalu tambahin di barisny itu pesanan yang di dequeue atau pop
        DefaultTableModel dbModel = (DefaultTableModel) Database.db.dbTabel.getModel();
        dbModel.addRow(new String[]{temp[0],temp[1], temp[2],temp[3], Util.hargaModalDariNamaPesanan(temp[1]),Util.hargaDariNamaPesanan(temp[1]),temp[4], temp[5], waktu});
        
        // hilangin data pada baris teratas
        DefaultTableModel model = (DefaultTableModel) dapurTabel.getModel();
        model.removeRow(0);
        
        // NEW THREAD ITU AGAR POP UP BISA MUNCUL SECARA BERSAMAAN DI KEDUA WIINDOW
        // beritahu ke kasir bahwa data atas nama dan pesanan siapa
        new Thread(new Runnable() {
            @Override
            public void run() {
                JOptionPane.showMessageDialog(Kasir.kasirRootPane, "Pesanan " + temp[1] + " atas nama " + temp[0] + " dengan harga Rp" +Util.hargaDariNamaPesanan(temp[1])+" silahkan di ambil");
            }
        }).start();
        
        // beritahu ke dapur bahwa data berhasil di delete
        new Thread(new Runnable() {
            @Override
            public void run() {
                JOptionPane.showMessageDialog(rootPane, "Data Berhasil Dicatat di Database");
            }
        }).start();
        

    }//GEN-LAST:event_buttonPopDapurActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dapur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dapur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dapur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dapur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dapur().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonPopDapur;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
